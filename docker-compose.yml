# version: '3.9'
# services:
#   scraper:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     volumes:
#       - .:/app
#       - ./images:/usr/src/app/images
#     depends_on:
#       - db
#     environment:
#     - DATABASE_URL=postgresql://user:password@db:5432/hotels_db

#   db:
#     image: postgres:13
#     container_name: postgres
#     environment:
#       - POSTGRES_DB=hotels_db
#       - POSTGRES_USER=user
#       - POSTGRES_PASSWORD=password
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   pgadmin:
#     image: dpage/pgadmin4
#     container_name: pgadmin
#     environment:
#       - PGADMIN_DEFAULT_EMAIL=admin@admin.com
#       - PGADMIN_DEFAULT_PASSWORD=admin
#     ports:
#       - "5050:80"
#     depends_on:
#       - db

# volumes:
#   postgres_data:


version: '3.9'
services:
  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - ./images:/usr/src/app/images
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/hotels_db
    networks:
      - app_network

  db:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_DB=hotels_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "hotels_db"]
      interval: 30s
      retries: 5
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
